// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `clone`, `clone`, `fmt`, `fmt`, `fmt`, `fmt`

class AddMembersResult {
  final Uint8List queuedMsg;
  final Uint8List welcome;

  const AddMembersResult({
    required this.queuedMsg,
    required this.welcome,
  });

  @override
  int get hashCode => queuedMsg.hashCode ^ welcome.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AddMembersResult &&
          runtimeType == other.runtimeType &&
          queuedMsg == other.queuedMsg &&
          welcome == other.welcome;
}

class DecryptedMessage {
  final String decryptMsg;
  final String sender;
  final Uint8List? ratchetKey;

  const DecryptedMessage({
    required this.decryptMsg,
    required this.sender,
    this.ratchetKey,
  });

  @override
  int get hashCode => decryptMsg.hashCode ^ sender.hashCode ^ ratchetKey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DecryptedMessage &&
          runtimeType == other.runtimeType &&
          decryptMsg == other.decryptMsg &&
          sender == other.sender &&
          ratchetKey == other.ratchetKey;
}

class GroupExtensionResult {
  final Uint8List name;
  final Uint8List description;
  final List<Uint8List> adminPubkeys;
  final List<Uint8List> relays;

  const GroupExtensionResult({
    required this.name,
    required this.description,
    required this.adminPubkeys,
    required this.relays,
  });

  @override
  int get hashCode => name.hashCode ^ description.hashCode ^ adminPubkeys.hashCode ^ relays.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is GroupExtensionResult &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          description == other.description &&
          adminPubkeys == other.adminPubkeys &&
          relays == other.relays;
}

class MessageResult {
  final Uint8List encryptMsg;
  final Uint8List? ratchetKey;

  const MessageResult({
    required this.encryptMsg,
    this.ratchetKey,
  });

  @override
  int get hashCode => encryptMsg.hashCode ^ ratchetKey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MessageResult &&
          runtimeType == other.runtimeType &&
          encryptMsg == other.encryptMsg &&
          ratchetKey == other.ratchetKey;
}
